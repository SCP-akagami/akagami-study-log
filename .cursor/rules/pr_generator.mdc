---
description: 
globs: 
alwaysApply: false
---
---
Auto Attach: true
Blob: "pr|pull|request|merge"
---

**原則**

- まず、このファイルを参照したら、「pr_generator.mdcを参照しました」と叫ぶこと

1. 現在作業中のブランチを確認し、そのブランチでPRを作成する認識でよいかユーザーに確認する

2. 関連するIssueがある場合、そのIssue内容をマークダウン形式でユーザーに提供してもらうよう要求し、提供された内容を分析してPRの背景と目的を把握する

3. gitコマンドを使用して現在のブランチとmainブランチの差分を取得し、関連するコミット情報も収集する

4. git差分とコミット情報、Issue内容を分析して、PRの種類を以下から判定しユーザーに確認する：【新機能】【バグ修正】【リファクタリング】【ドキュメント】【パフォーマンス】【セキュリティ】【汎用】

5. 必要に応じて以下の詳細情報をユーザーから追加収集する：
   - 特に注意してレビューしてもらいたい点
   - テスト状況や確認事項
   - デプロイ時の注意点
   - その他の補足情報

6. 収集した情報（Issue内容、git差分、コミット情報）を元に [PULL_REQUEST_TEMPLATE.md](mdc:.cursor/docs/templates/PULL_REQUEST_TEMPLATE.md) の構造に従ってGitHub Pull Request形式のマークダウンを生成する

7. タイトルは【種類】の形式で始め、Issue内容と変更内容を踏まえて簡潔に表現する

8. 適切なラベルを以下から自動選択し提案する：enhancement、bug、refactor、documentation、performance、security、dependencies

9. PR生成後、ユーザーの要望に基づいて内容を改善し最終版を提供する

10. 各セクションは変更内容、テスト状況、レビューポイントが明確でレビュアーにとって有用な情報を含むよう作成する
